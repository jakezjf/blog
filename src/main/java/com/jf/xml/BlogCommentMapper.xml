<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.BlogCommentMapper" >
  <resultMap id="BaseResultMap" type="com.jf.model.BlogComment" >
    <id column="com_id" property="comId" jdbcType="INTEGER" />
    <result column="blog_id" property="blogId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="com_info" property="comInfo" jdbcType="VARCHAR" />
    <result column="back1" property="back1" jdbcType="VARCHAR" />
    <result column="back2" property="back2" jdbcType="VARCHAR" />
    <result column="back3" property="back3" jdbcType="VARCHAR" />
    <result column="back4" property="back4" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    com_id, blog_id, user_id, add_time, com_info, back1, back2, back3, back4
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jf.model.BlogCommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from blog_comment
    where com_id = #{comId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from blog_comment
    where com_id = #{comId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jf.model.BlogCommentExample" >
    delete from blog_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jf.model.BlogComment" >
    insert into blog_comment (com_id, blog_id, user_id, 
      add_time, com_info, back1, 
      back2, back3, back4
      )
    values (#{comId,jdbcType=INTEGER}, #{blogId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, 
      #{addTime,jdbcType=TIMESTAMP}, #{comInfo,jdbcType=VARCHAR}, #{back1,jdbcType=VARCHAR}, 
      #{back2,jdbcType=VARCHAR}, #{back3,jdbcType=VARCHAR}, #{back4,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jf.model.BlogComment" >
    insert into blog_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="comId != null" >
        com_id,
      </if>
      <if test="blogId != null" >
        blog_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="comInfo != null" >
        com_info,
      </if>
      <if test="back1 != null" >
        back1,
      </if>
      <if test="back2 != null" >
        back2,
      </if>
      <if test="back3 != null" >
        back3,
      </if>
      <if test="back4 != null" >
        back4,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="comId != null" >
        #{comId,jdbcType=INTEGER},
      </if>
      <if test="blogId != null" >
        #{blogId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="comInfo != null" >
        #{comInfo,jdbcType=VARCHAR},
      </if>
      <if test="back1 != null" >
        #{back1,jdbcType=VARCHAR},
      </if>
      <if test="back2 != null" >
        #{back2,jdbcType=VARCHAR},
      </if>
      <if test="back3 != null" >
        #{back3,jdbcType=VARCHAR},
      </if>
      <if test="back4 != null" >
        #{back4,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jf.model.BlogCommentExample" resultType="java.lang.Integer" >
    select count(*) from blog_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update blog_comment
    <set >
      <if test="record.comId != null" >
        com_id = #{record.comId,jdbcType=INTEGER},
      </if>
      <if test="record.blogId != null" >
        blog_id = #{record.blogId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.addTime != null" >
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.comInfo != null" >
        com_info = #{record.comInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.back1 != null" >
        back1 = #{record.back1,jdbcType=VARCHAR},
      </if>
      <if test="record.back2 != null" >
        back2 = #{record.back2,jdbcType=VARCHAR},
      </if>
      <if test="record.back3 != null" >
        back3 = #{record.back3,jdbcType=VARCHAR},
      </if>
      <if test="record.back4 != null" >
        back4 = #{record.back4,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update blog_comment
    set com_id = #{record.comId,jdbcType=INTEGER},
      blog_id = #{record.blogId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      com_info = #{record.comInfo,jdbcType=VARCHAR},
      back1 = #{record.back1,jdbcType=VARCHAR},
      back2 = #{record.back2,jdbcType=VARCHAR},
      back3 = #{record.back3,jdbcType=VARCHAR},
      back4 = #{record.back4,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jf.model.BlogComment" >
    update blog_comment
    <set >
      <if test="blogId != null" >
        blog_id = #{blogId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="comInfo != null" >
        com_info = #{comInfo,jdbcType=VARCHAR},
      </if>
      <if test="back1 != null" >
        back1 = #{back1,jdbcType=VARCHAR},
      </if>
      <if test="back2 != null" >
        back2 = #{back2,jdbcType=VARCHAR},
      </if>
      <if test="back3 != null" >
        back3 = #{back3,jdbcType=VARCHAR},
      </if>
      <if test="back4 != null" >
        back4 = #{back4,jdbcType=VARCHAR},
      </if>
    </set>
    where com_id = #{comId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jf.model.BlogComment" >
    update blog_comment
    set blog_id = #{blogId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      com_info = #{comInfo,jdbcType=VARCHAR},
      back1 = #{back1,jdbcType=VARCHAR},
      back2 = #{back2,jdbcType=VARCHAR},
      back3 = #{back3,jdbcType=VARCHAR},
      back4 = #{back4,jdbcType=VARCHAR}
    where com_id = #{comId,jdbcType=INTEGER}
  </update>
</mapper>